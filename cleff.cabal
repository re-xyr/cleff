cabal-version: 3.0

name:          cleff
version:       0.3.4.0
author:        Xy Ren
maintainer:    xy.r@outlook.com
license:       BSD-3-Clause
copyright:     2021 Xy Ren
homepage:      https://github.com/re-xyr/cleff
bug-reports:   https://github.com/re-xyr/cleff/issues
tested-with:   GHC == {9.2.5, 9.0.2, 8.10.7, 8.8.4}
category:      Control, Effect, Language
synopsis:      Fast and concise extensible effects
license-file:  LICENSE

extra-source-files:
  CHANGELOG.md
  README.md

description:
  @cleff@ is an effect system for building modular, well-abstracted and performant programs. It provides:
  .
  - Blazing-fast speed in the majority of use cases (<#benchmarks Benchmarks>)
  - Well-built integration with the existing Haskell ecosystem (@unliftio@, @monad-control@, @exceptions@...)
  - Predictable behavior under expections and concurrency that does not stab you in the back
  - Flexible and expressive API for power users, with first-class support of scoped effects
  .
  You can use @cleff@ out of the box, with little to no boilerplate. To get started, use the module "Cleff" as a
  starting point.

source-repository head
  type:      git
  location:  https://github.com/re-xyr/cleff

flag dynamic-ioe
  description:
    Make @IOE@ a real effect. This is only for reference purposes and should not be enabled in production code.

  manual: True
  default: False

common lang
  default-language: Haskell2010
  build-depends:
    base                >= 4.12 && < 4.19,
    atomic-primops     ^>= 0.8,
    containers          >= 0.5 && < 0.7,
    exceptions         ^>= 0.10,
    microlens           >= 0.1 && < 0.5,
    monad-control       >= 1 && < 1.1,
    primitive           >= 0.6.4 && < 0.8,
    stm                ^>= 2.5,
    template-haskell    >= 2.14 && < 2.20,
    th-abstraction      >= 0.2 && < 0.5,
    transformers-base  ^>= 0.4,
    unliftio-core       >= 0.1.1 && < 0.3,
  ghc-options:
    -Wall
    -Widentities
    -Wincomplete-record-updates
    -Wincomplete-uni-patterns
    -Wno-unticked-promoted-constructors
    -Wpartial-fields
    -Wunused-type-patterns
  if impl(ghc >= 8.8)
    ghc-options: -Wmissing-deriving-strategies
  default-extensions:
    BangPatterns
    BlockArguments
    ConstraintKinds
    DataKinds
    DeriveAnyClass
    DerivingStrategies
    DerivingVia
    EmptyCase
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTs
    GeneralizedNewtypeDeriving
    LambdaCase
    MagicHash
    NoStarIsType
    PatternSynonyms
    PolyKinds
    RankNTypes
    RoleAnnotations
    ScopedTypeVariables
    StandaloneDeriving
    TemplateHaskell
    TupleSections
    TypeApplications
    TypeFamilies
    TypeOperators
    UndecidableInstances
    UnicodeSyntax
    UnliftedFFITypes
    ViewPatterns

common dump
  ghc-options:
    -ddump-simpl
    -ddump-to-file
    -dsuppress-all
    -dsuppress-uniques

library
  import:          lang
  hs-source-dirs:  src
  ghc-options:
    -Wmissing-export-lists
    -fdicts-strict
    -flate-dmd-anal
    -fspec-constr
  if flag(dynamic-ioe)
    cpp-options: -DDYNAMIC_IOE
  exposed-modules:
    Cleff
    Cleff.Error
    Cleff.Fail
    Cleff.Fresh
    Cleff.Input
    Cleff.Internal.Base
    Cleff.Internal.Env
    Cleff.Internal.Interpret
    Cleff.Internal.Monad
    Cleff.Internal.Stack
    Cleff.Internal.TH
    Cleff.Mask
    Cleff.Output
    Cleff.Reader
    Cleff.State
    Cleff.Trace
    Cleff.Writer
  other-modules:
    Data.Any
    Data.PrimVec
    Data.RadixVec
    Data.ThreadVar

test-suite cleff-example
  import:          lang
  type:            exitcode-stdio-1.0
  hs-source-dirs:  example
  main-is:         Main.hs
  ghc-options:
    -threaded
    -rtsopts
    -with-rtsopts=-N
  build-depends:
    cleff,
    extra,
    unliftio,
  other-modules:
    Broker
    Filesystem
    Teletype

test-suite cleff-test
  import:          lang
  type:            exitcode-stdio-1.0
  hs-source-dirs:  test
  main-is:         Main.hs
  ghc-options:
    -threaded
    -rtsopts
    -with-rtsopts=-N
  build-depends:
    cleff,
    extra,
    hspec,
    lifted-base,
    unliftio,
  build-tool-depends:
    hspec-discover:hspec-discover
  other-modules:
    ConcurrencySpec
    ErrorSpec
    HigherOrderSpec
    InterposeSpec
    MaskSpec
    StateSpec
    ThSpec
